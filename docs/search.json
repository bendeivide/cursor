{
  "articles": [
    {
      "path": "about.html",
      "title": "Sobre o Curso R",
      "description": "A finalidade do curso R é proporcionar um maior entendimento sobre a linguagem para que a sua imagação e criatividade seja livre  ",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2021-02-16T04:58:42-03:00"
    },
    {
      "path": "index.html",
      "title": "Curso R",
      "description": "Aprecie todo o material contido nesse site, como se fosse seu. Zele, propague, critique, contribua. Será um prazer compartilharmos nossas experiências e experienciarmos juntos esse conhecimento! \n",
      "author": [],
      "contents": "\r\n\r\nSumário\r\n Sobre o autor\r\n Proposta do curso\r\nProgramação em R (Nível Básico)\r\nProgramação em R (Nível Intermediário)\r\nProgramação em R (Nível Avançado)\r\nReferências do curso\r\nOnde encontrar nossos materiais\r\nPacotes R utilizados para esse curso\r\n\r\n Instalação do R e do RStudio\r\nSO Windows\r\nSO Linux (Ubuntu)\r\nSO MAC\r\n\r\n\r\n Sobre o autor \r\nNatural da cidade de Pau dos Ferros/RN. Formado em Engenharia Agronômica pela Universidade Federal Rural do Semiárido (UFERSA), Mossoró/RN. Pós-Graduação (Mestrado e Doutorado) e Pós-Doutorado em Estatística e Experimentação Agropecuária pela Universidade Federal de Lavras (UFLA), Lavras/MG. Atualmente estou como Professor de Estatística pela Universidade de São João Del-Rei (UFSJ), campus Alto Paraopeba, Ouro Branco/MG. Minhas linhas de pesquisas se concentram em Estatística e Probabilidade, Estatística Experimental, Estatística Computacional (linguagem R), densenvolvimento de pacotes R para análises de dados e ensino da Estatística. Mais detalhes, acesse minha página.\r\nA motivação para estudar a linguagem R se deve a algumas fases experienciadas na vida acadêmica. A primeira foi a paixão pela Estatística. Estando no terceiro período do curso de Agronomia (UFERSA), concorri a tão sonhada monitoria de Estatística, orientada pelo Prof. Janilson Pinheiro de Assis (UFERSA). Nessa fase houve muitas conversas e conselhos para seguir em uma pós-graduação na área da Estatística. Se tornou amor quando fui impulsionado pelas leituras de apostilas e o encanto por um programa estatístico chamado SISVAR, do Prof. Daniel Furtado Ferreira (UFLA), Figura 1. Isso resultou em todo amadurecimento profissional que adquirir, durante o mestrado e doutorado sob a orientação do Prof. Daniel, e ainda adquiro trabalhando em parceria que ainda realizamos juntos.\r\n\r\n\r\n\r\nFigure 1: Daniel Furtado na Serra da Bocaina (Lavras/MG).1\r\n\r\n\r\n\r\nAinda durante a graduação, além de conhecer os materiais de Estatística do Professor Daniel, comecei a ler os materiais introdutórios em R, que costumeiramente, ele postava em sua página institucional. Mas o passo inicial para me guiar ao estudo do R, foi idealizado por uma apostila do Professor Paulo Justiniano Ribeiro Júnior (UFPR), intitulada Introdução ao Ambiente Estatístico R. As primeiras leituras desse material, me trouxe um bom conhecimento inicial, sobre a linguagem R, ao mestrado na UFLA.\r\nTudo isso me levou a essa outra grande paixão hoje que é estudar essa linguagem. Com o apoio inicial do Prof. Daniel Furtado, durante a pós-graduação, e agora na UFSJ, com os alunos que trabalham comigo de iniciação científica, juntos com mais alguns outros parceiros de estrada, chegamos a publicação de alguns pacotes R sob o CRAN, segue em ordem de publicação, SMR, midrangeMCP, TVMM, cppcor, MCPtests. Para projetos futuros, temos os pacotes statscience, meupacoter, dentre outros ainda não disponíveis.\r\n\r\n Proposta do curso \r\nO curso R não tem como objetivo principal de ensinar análise de dados. Mas sim, proporcionar a você um conhecimento sobre a linguagem R, de modo que consiga usufruir todos os recursos que ela possa lhe proporcionar.\r\nAinda como complemento, não queremos nesse material, convencê-lo a utilizar a linguagem R, pois a melhor linguagem é aquela que você domina. Contudo, pretendemos lhe mostrar que os recursos utilizados pelo R não estão mais limitados a própria análise de dados. Um exemplo é esse material, que nesse momento usufruo do R para repassar as minhas experiências sem ao menos ter o domínio sobre linguagens do tipo HTML, CSS, JavaScript, dentre outras, necessárias para uma boa criação de página web.\r\nDessa forma, propormos um entendimento sobre a sintaxe e semântica de como a linguagem R é desenvolvida. Com isso, você será capaz após esse curso, estudar um pouco mais sobre essa ciência que nos últimos anos vem ganhando mais evidência, que é a Estatística. Tudo isso devido ao grande volume de informações obtidos nessa era tecnológica. Juntamente com ela, o R se tornará uma poderosa ferramenta com o qual você poderá entender os padrões que estão por trás dos dados, que por sinal, é a moeda valiosa do momento, ou melhor, sempre foi!\r\nMas não só apenas análise de dados, aprenderemos também recursos diversos na área da computação, como programação defensiva, desenvolvimento de interfaces gráficas, paralelização. Ensinaremos também o desenvolvimento de materiais como artigos, livros, websites, blogs, dashboards. Por fim, chegaremos a maior cobiça de um programador R, desenvolver seu próprio pacote R.\r\n\r\n\r\n Repararam que em muitos momentos utilizamos o artigo “o” para a linguagem R. Pois é, isso ocorre porque ela também é considerada um software. Daí, também podemos chamá-la de software R. \r\n\r\n\r\nO material curso R apresentará três módulos:\r\nProgramação em R (Nível Básico)\r\nProgramação em R (Nível Intermediário)\r\nProgramação em R (Nível Avançado)\r\nA seguir, explanaremos sobre cada um dos módulos.\r\nProgramação em R (Nível Básico)\r\nO primeiro módulo compreenderá um breve histórico sobre a linguagem, o conhecimento da sintaxe e semântica da linguagem R, compreendendo as estruturas bases da linguagem, sobre o que é um objeto e como construir uma função, o entendimento sobre fluxos de controle. O que é um pacote, carregar e anexar um pacote, e quem são as pessoas que fazem parte da manutenção dessa linguagem, também serão assuntos desse primeiro módulo. Caminhos de busca, ambientes e namespaces, teremos noções básicas. Algo muito interessante, que pode mudar a sua vida como programação em R são as boas práticas para a escrita de um código R, tema também abordado nesse módulo.\r\nProgramação em R (Nível Intermediário)\r\nEm contrução…\r\nProgramação em R (Nível Avançado)\r\nEm contrução…\r\nReferências dos curso\r\nCitaremos alguns livros e materiais utilizados para o desenvolvimento desse curso, tais como:\r\nAn introduction to R\r\nAdvanced R (Wickham 2019)\r\nAdvanced R Solutions (Grosser, Buman, and Wickham 2021)\r\nR Packages (Wickham 2015)\r\nExtending R (Chambers 2016)\r\nSoftware for Data Analysis: Programming with R (Chambers 2008)\r\nR in a Nutshell (Adler 2012)\r\nOnde encontrar os nossos materiais\r\nTemos dedicado uma parte do nosso trabalho no desenvolvimento de materiais em R, dos quais podem ser encontrados em: Ciencia e Progresso, Github e página pessoal.\r\nPacotes R utilizados para esse curso\r\nSegue uma lista dos pacotes utilizados para o desenvolvimento do material desse curso:\r\nPacote\r\nObjetivo para o curso\r\nlobstr\r\nAuxilia nas representações internas de um objeto R\r\ndistill\r\nCriação da página\r\n Instalação do R e do RStudio\r\nA seguir, apresentaremos as subseções para a instalação da linguagem R e do RStudio. Em todo nosso curso utilizaremos o sistema operacional Windows. Contudo, se esse não é o seu sistema operacinal, não haverá problema no entendimento sobre o R. Assim, convencionaremos a todos a utilização do RStudio, uma vez que poderá ser instalado nas principais plataformas de sistema operacional.\r\nSO Windows\r\nPara a instalação do R e do RStudio, como também do rtools, convidaremos para a seção Instalação do R e do RStudio do primeiro módulo desse curso, que é Programação em R (nível básico)\r\nSO Linux (Ubuntu)\r\nUm vídeo produzido pelo nosso canal do Youtube/Ben Dêivide, mostra falcilmente como realizar a instalação do R e o RStudio pelo Linux: \r\nUma outra opção pode ser um vídeo produzido pelo Canal PPGC UFSC (Youtube), mostra falcilmente como realizar a instalação do R e o RStudio pelo Linux: \r\nSO MAC\r\nUm vídeo produzido pelo Canal PPGC UFSC (Youtube), mostra falcilmente como realizar a instalação do R e o RStudio pelo MAC:\r\n\r\n\r\n\r\n\r\n\r\nAdler, Joseph. 2012. R in a Nutshell. Sebastopol: O’Reilly Media.\r\n\r\n\r\nChambers, John M. 2008. Extending R. Statistics and Computing. New York: Springer.\r\n\r\n\r\n———. 2016. Extending R. The R Series. Boca Raton, Florida: Chapman; Hall/CRC.\r\n\r\n\r\nGrosser, Malte, Henning Buman, and Hadley Wickham. 2021. Advanced R Solutions. 2nd ed. Boca Raton, Florida: Chapman; Hall/CRC. https://adv-r.hadley.nz/.\r\n\r\n\r\nWickham, Hadley. 2015. R Packages. 2nd ed. O’Reilly Media. https://r-pkgs.org/index.html.\r\n\r\n\r\n———. 2019. Advanced R. 2nd ed. Boca Raton, Florida: Chapman; Hall/CRC. https://adv-r.hadley.nz/.\r\n\r\n\r\n———. 2019. Advanced R. 2nd ed. Boca Raton, Florida: Chapman; Hall/CRC. https://adv-r.hadley.nz/.\r\n\r\n\r\nFonte das fotos: Acervo pessoal de Daniel Furtado↩︎\r\n",
      "last_modified": "2021-02-16T04:42:35-03:00"
    },
    {
      "path": "nbasico.html",
      "title": "Programação em R (Nível Básico)",
      "description": "Esse módulo terá o objetivo de apresentar de forma introdutória a **sintaxe** e **semântica** da linguagem `R`, enfatizando definições importantíssimas para a linguagem como **objeto**, **função** e **pacote**, como também outras definições\n",
      "author": [],
      "contents": "\r\nSumário\r\n Materiais para este módulo\r\nSlides de Aulas\r\nScripts\r\nScripts via Shiny\r\n\r\n\r\n Materiais para este módulo\r\nSlides de Aulas\r\nAula 00: Apresentação do Curso\r\nAula 01: Instalação do R e do RStudio\r\nAula 02: Passos iniciais para a utilização do R e do RStudio\r\nAula 03: História do R\r\nAula 04: Como o R trabalha\r\nAula 05: Símbolos e Comandos elementares\r\nAula 06: Arquivos .RData e .Rhistory\r\nAula 07: Criando e salvando um Script\r\nAula 08: Exportando dados\r\nAula 09: Objetos\r\nAula 10: Vetores\r\nAula 11: Matrizes\r\nAula 12: Arrays\r\nAula 13: Data frames\r\nAula 14: Lists\r\nAula 15: Funções\r\nAula 17: Boas práticas de como escrever um código\r\nAula 17: Como criar funções\r\nAula 18: Controle de fluxos (Loops)\r\nAula 19: Pacotes\r\nAula 20: Carregando e Anexando pacotes\r\nAula 21: Quando devemos utilizar os operadores :: e :::\r\nAula 22: Namespace de um pacote\r\nAula 23: Ambientes e Caminhos de busca\r\nAula 24: Interface com outras linguagens\r\nAula 25: Considerações e Preparação para a Programação em R (Nível Intermediário)\r\nScripts\r\nScript 00: ~\r\nScript 01: ~\r\nScript 02:\r\nScript 03:\r\nScript 04:\r\nScript 05:\r\nScript 06:\r\nScript 07:\r\nScript 08:\r\nScript 09:\r\nScript 10:\r\nScripts via {#shiny} Shiny\r\nEm construção…\r\n Apresentação do curso\r\nO Curso R será todo aprensentado no formato online, sendo que as aulas terão vídeos como suporte, postados no canalYoutube/Ben Dêivide divulgados ao longo do material. Os vídeos serão bem objetivos de curta duração para que usem como suporte com o material escrito. Como complemento desse material, disponibilizaremos os scripts com os comandos utilizados em cada aula e sua versão em Shiny para os que não quiserem realizar inicialmente a instalação do R e do RStudio, poderão utilizar uma versão online do material juntamente com a linguagem R.\r\n História do R\r\nA linguagem R tem a sua primeira aparição científica publicada em 1996, com o artigo intitulado R: A Language for Data Analysis and Graphics, cujos os autores são os desenvolvedores da linguagem, George Ross Ihaka e Robert Clifford Gentleman.\r\n\r\n\r\n\r\nFigure 1: Criadores do R.1\r\n\r\n\r\n\r\nDurante a época em que estes professores trabalhavam na Universidade de Auckland, Nova Zelândia, desenvolvendo uma implementação alternativa da lingugagem S, desenvolvida por John Chambers, que comercialmente era o S-PLUS, nasceu em 1991, o projeto da linguagem R, em que em 1993 o projeto é divulgado e em 1995, o primeiro lançamento oficial, como software livre com a licença GNU. Devido a demanda de correções da linguagem estava acima da capacidade de atualização em tempo real, foi criado em 1997, um grupo central voluntário, responsável por essas atualizações, o conhecido R Development Core Team2, que hoje está em 20 membros: Douglas Bates, John Chambers, Peter Delgaard, Robert Gentleman, Kurt Hornik, Ross Ihaka, Tomas kalibera, Michael Lawrence, Friedrich Leish, Uwe Ligges, Thomas Lumley, Martin Maechler, Martin Morgan, Paul Murrel, Martyn Plummer, Brian Ripley, Deepayan Sarkarm, Duncan Temple Lang, Luke Tierney e Simon Urbanek.\r\nPor fim, o CRAN (Comprehensive R Archive Network) foi oficialmente anunciado em 23 de abril de 19973. O CRAN é um conjunto de sites (espelhos) que transportam material idêntico, com as contribuições do R de uma forma geral.\r\nR é uma linguagem de programação e ambiente de software livre e código aberto (open source). Entendemos4:\r\nSoftware livre: software que respeita a liberdade e sendo de comunidade dos usuários, isto é, os usuários possuem a liberdade de executar, copiar, distribuir, estudar, mudar, melhorar o software. Ainda reforça que um software é livre se os seus usuários possuem quatro liberdades:\r\nLiberdade 0 - A liberdade de executar o programa como você desejar, para qualquer propósito;\r\nLiberdade 1 - A liberdade de estudar como o programa funciona, e adaptá-la as suas necessidades;\r\nLiberdade 2 - A liberdade de redistribuir cópias de modo que você possa ajudar outros;\r\nLiberdade 3 - A liberdade de distribuir cópias de suas versões modificadas a outros.\r\n\r\nAlgo que deve está claro é que um software livre não significa não comercial. Sem esse fim, o software livre não atingiria seus objetivos.\r\nAgora perceba que, segundo Richard Stallman5, a ideia de software livre faz campanha pela liberdade para os usuários da computação. Por outro lado, o código aberto valoriza principalmente a vantagem prática e não faz campanha por princípios.\r\nCódigo aberto: Para Richard Stallman6 código aberto apoia critérios um pouco mais flexíveis que os do software livre. Todos os códigos abertos de software livre lançados se qualificariam como código aberto. Quase todos os softwares de código aberto são software livre, mas há exceções, como algumas licenças de código aberto que são restritivas demais, de forma que elas não se qualificam como licenças livres. Nesse contexto, o autor cita muitas situações que diferenciam os dois termos. Vale a pena a leitura.\r\nA linguagem R é uma combinação da linguagem S com a semântica de escopo léxico da linguagem Scheme. Dessa forma, a linguagem R se diferencia em dois aspectos principais7:\r\nGerenciamento de memória: usando as próprias palavras de Ross Ihaka8, em R, alocamos uma quantidade fixa de memória na inicialização e a gerenciamos com um coletor de lixo dinâmico. Isso significa que há muito pouco crescimento de heap e, como resultado, há menos problemas de paginação do que os vistos em S.\r\nEscopo: na linguagem R, as funções acessam as variáveis criadas pelo no corpo da própria função, como também as variáveis contidas no ambiente que a função foi criada. No caso da linguagem S, isso não ocorre, assim, como por exemplo na linguagem C, em que as funções acessam apenas variáveis definidas globalmente.\r\nVejamos alguns exemplos para entendimento (Se você ainda não está ambientado ao R, estude esse módulo primeiro, e depois reflita sobre esses exemplos):\r\nExemplo 1: As funções têm acesso ao escopo em que foram criadas.\r\n\r\n\r\n# Criando um nome \"n\" associado a um objeto 10 no escopo da função\r\nn <- 10\r\n\r\n# Criando um nome \"funcao\" associado a um objeto que é uma função\r\nfuncao <- function() {\r\n  print(n)\r\n}\r\n\r\n# Imprimindo 'funcao'\r\nfuncao()\r\n\r\n\r\n> [1] 10\r\n\r\nExemplo 2: As variáveis criadas ou alteradas dentro de uma função, permanecem na função.\r\n\r\n\r\n# Criando um nome \"n\" associado a um objeto 10 no escopo da função\r\nn <- 10\r\n\r\n# Criando um nome \"funcao\" associado a um objeto que é uma função\r\nfuncao <- function() {\r\n  # Imprimindo n\r\n  print(n)\r\n  # Criando um nome \"n\" associado a um objeto 15 no corpo da função\r\n  n <- 15\r\n  # Imprimindo n\r\n  print(n)\r\n}\r\n# Imprimindo 'funcao'\r\nfuncao()\r\n\r\n\r\n> [1] 10\r\n> [1] 15\r\n\r\nExemplo 3: As variáveis dentro de uma função permanecem nelas, exceto no caso em que a atribuição ao escopo seja explicitamente solicitada.\r\n\r\n\r\n# Criando um nome \"n\" associado a um objeto 10 no escopo da função\r\nn <- 10\r\n\r\n# Criando um nome \"funcao\" associado a um objeto que é uma função\r\nfuncao <- function() {\r\n  # Imprimindo n\r\n  print(n)\r\n  # Criando um nome \"n\" associado a um objeto 15 no corpo da função\r\n  n <<- 15\r\n  # Imprimindo n\r\n  print(n)\r\n}\r\n# Imprimindo 'funcao'\r\nfuncao()\r\n\r\n\r\n> [1] 10\r\n> [1] 15\r\n\r\n# Observe que depois de usar a superatribuição (\"<<-\") dentro da função, \r\n#o nome \"n\" passou a estar associado ao número 15 e não mais ao número 10, observe\r\nn\r\n\r\n\r\n> [1] 15\r\n\r\nExemplo 4: Por fim, embora a linguagem R tenha um escopo padrão, chamado ambiente global, os escopos de funções podem ser alterados.\r\n\r\n\r\n# Criando um nome 'n' associado a um objeto 10 no escopo da função (ambiente global)\r\nn <- 10\r\n# Criando um nome 'funcao' associado a um objeto que é uma função criado no ambiete global\r\nfuncao <- function() {\r\n  # Imprimindo n\r\n  print(n)\r\n}\r\n# Imprimindo 'funcao' no ambiente global\r\nfuncao()\r\n\r\n\r\n> [1] 10\r\n\r\n# Criando um novo ambiente\r\nnovo_ambiente <- new.env()\r\n# Criando um nome \"n\" associado ao objeto 20 no ambiente  'novo_ambiente'\r\nnovo_ambiente$n <- 20\r\n# Criando um objeto funcao no ambiente 'novo_ambiente'\r\nenvironment(funcao) <- novo_ambiente\r\n# Imprimindo 'funcao' no ambiente 'novo_ambiente'\r\nfuncao()\r\n\r\n\r\n> [1] 20\r\n\r\nComo a linguagem S é também uma linguagem interpretada cuja base é a linguagem FORTRAN, a linguagem R tem como base as linguagens de baixo nível C e FORTRAN e a própria linguagem R.\r\nEmbora o R tenha uma interface baseada em linhas de comando, existem muitas interfaces gráficas ao usuário com destaque ao RStudio, criado por Joseph J. Allaire, Figura 2.\r\n\r\n\r\n\r\nFigure 2: J. J. Allaire, o criador do RStudio9.\r\n\r\n\r\n\r\nEssa interface tornou o R mais popular, pois além de produzir pacotes de grande utilização hoje como a família de pacotes tidyverse, rmarkdown, shiny, dentre outros, permite uma eficiente capacidade de trabalho de análise de utilização do R. Uma vez que o RStudio facilita a utilização de muitos recursos por meio de botões, como por exemplo, a criação de um pacote R, a quem diga que para um iniciante em R que não inicie a linguagem por meio dela. Cremos, que o problema não é o RStudio, e sim, o caminho onde deseja chegar com a linguagem R.\r\nNo Brasil, o primeiro espelho do CRAN foi criado na UFPR, pelo grupo do Prof. Paulo Justiniano. Inclusive um dos primeiros materiais mais completos sobre a linguagem R produzidos no Brasil, foi dele, iniciado em 2005, intitulado Introdução ao Ambiente Estatístico R. Vale a pena assistirmos o evento a palestra: R Releflões: um pouco de história e experiências com o R, proferida pelo Prof. Paulo Justiniano Ribeiro Júnior, no R Day - Encontro nacional de usuários do R, ocorrido em 2018 em Curitiba/UFPR, do qual o vídeo está disponível no Canal (Youtube) LEG UFPR.\r\n\r\n\r\nPara quem não sabe, o Prof. Paulo Justiniano (Figura 3) e sua equipe trouxeram o primeiro espelho do R para o Brasil e foi o desenvolvedor de um dos 100 primeiros pacotes submetidos ao CRAN10. Devido a sua ida para XXX fazer o pós-doutorado, se deparou com o início dos estudos sobre o R fora do país. Não satisfeito, ao voltar para o Brasil, começa-se os estudos sobre o R….\r\n\r\n\r\n\r\nFigure 3: Foto de divulgação de Paulo Justiniano11 no R Day.\r\n\r\n\r\n\r\n\r\n Sintaxe e semântica do R\r\nSímbolos e comando elementares\r\nA primeira ideia que temos sobre a linguagem R é a linha de comando no R, que é simbolizada pelo prompt de comando “>.” Este símbolo significa que o R está pronto para receber os comandos do usuário. O prompt de comando está localizado Vejamos o console do R a seguir, que é o local que recebe as linhas de comando do usuário.\r\n\r\n\r\n\r\nFigure 4: Console do R.\r\n\r\n\r\n\r\nO RStudio se apresenta como uma interface para facilitar a utilização do R, tendo por padrão quatro quadrantes, apresentados na Figura 5.\r\n\r\n\r\n\r\nFigure 5: Interface do RStudio.\r\n\r\n\r\n\r\nOs três princípios do R\r\nIniciamos a discussão por uma afirmação de John McKinley Chambers, do qual afirmou que o R tem três princípios (Chambers 2016):\r\n\r\n\r\n\r\nFigure 6: John Chumbers12, o criador da linguagem S.\r\n\r\n\r\n\r\nTudo que existe em R é um objeto;\r\nTudo que acontece no R é uma chamada de função;\r\nInterfaces para outros programas são parte do R.\r\nPara a construção e base dessas ideias, usaremos a convenção utilizada por Wickham (2019), formalizando o entendimento por meio de diagramas. Definimos um objeto como uma estrutura de dados com características internas contendo informações necessárias para interpretar sua estrutura e conteúdo. Essas características são chamadas de atributos.\r\nVejamos o seguinte código:\r\n\r\n\r\nx <- 10\r\n\r\n\r\n\r\nTodo mundo que tem uma certa noção sobre a linguagem R afirmaria: “criei um objeto x que recebe o valor 10.” Para Wickham (2019) essa afirmação é imprecisa e pode levar um entendimento equivocado sobre o que acontece de fato. Para o mesmo autor, o correto é afirmar que o objeto 10 está se ligando a um nome. E de fato, o objeto não tem um nome, mas o nome tem um objeto. A símbolo que associa um objeto a um nome é o de atribuição, <-. Este símbolo poderá ser representado na direção da esquerda para à direita ou vice-versa, isto é,\r\n\r\n\r\nx <- 10\r\n10 -> x\r\n\r\n\r\n\r\nAs duas formas acima são possíveis\r\n\r\n\r\n\r\n\r\nChambers, John M. 2016. Extending R. The R Series. Boca Raton, Florida: Chapman; Hall/CRC.\r\n\r\n\r\nWickham, Hadley. 2019. Advanced R. 2nd ed. Boca Raton, Florida: Chapman; Hall/CRC. https://adv-r.hadley.nz/.\r\n\r\n\r\n———. 2019. Advanced R. 2nd ed. Boca Raton, Florida: Chapman; Hall/CRC. https://adv-r.hadley.nz/.\r\n\r\n\r\nFonte das fotos: Robert Gentleman do site: https://biocasia2020.bioconductor.org/ e Ross Ihaka do site: https://www.stat.auckland.ac.nz/en/about/news-and-events-5/news/news-2017/2017/12/ross-ihaka-retires.html↩︎\r\nFontes: https://cran.r-project.org/doc/html/interface98-paper/paper_2.html e https://www.r-project.org/contributors.html↩︎\r\nFonte: https://stat.ethz.ch/pipermail/r-announce/1997/000001.html↩︎\r\nFonte: https://www.gnu.org/philosophy/free-sw.html↩︎\r\nFonte: https://www.gnu.org/philosophy/open-source-misses-the-point.html↩︎\r\nFonte: https://www.gnu.org/philosophy/open-source-misses-the-point.html↩︎\r\nhttps://cran.r-project.org/doc/html/interface98-paper/paper_1.html↩︎\r\nhttps://cran.r-project.org/doc/html/interface98-paper/paper_1.html↩︎\r\nFonte da foto: https://rstudio.com/speakers/j.j.-allaire/↩︎\r\nComprehensive R Archive Network↩︎\r\nFonte da foto: https://www.ufpr.br/portalufpr/noticias/disciplinas-transversais-para-programas-de-pos-graduacao-abrem-inscricoes-nesta-segunda-feira/↩︎\r\nFonte da foto: Retirada de sua página pessoal, https://statweb.stanford.edu/~jmc4/↩︎\r\n",
      "last_modified": "2021-02-16T04:58:41-03:00"
    }
  ],
  "collections": []
}
